@page "/Login"
@using HttpClients.ClientInterfaces
@inject IAuthService AuthService
@inject NavigationManager NavMgr
<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <input placeholder="Username" type="text" @bind="_userName"/>
            </div>
            <div class="field">
                <input placeholder="Password" type="password" @bind="_password"/>
            </div>
            @if (!string.IsNullOrEmpty(_errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @_errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="LoginAsync">Log in</button>
            </div>
            <div class="field">
                <button class="loginbtn" @onclick= "OnCrateAccountClick">Create Account</button>
                </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity?.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>
@code {
    private string _userName = "";
    private string _password ="";
    private string _errorLabel = "";

    private async Task LoginAsync()
    {
        _errorLabel = "";
        try
        {
            await AuthService.LoginAsync(_userName, _password);
            NavMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _errorLabel = $"Error: {e.Message}";
        }
    }

    private void OnCrateAccountClick()
    {
        NavMgr.NavigateTo("/CreateAccount");
    }
}