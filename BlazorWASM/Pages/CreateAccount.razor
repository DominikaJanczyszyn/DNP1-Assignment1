@page "/CreateAccount"
@using HttpClients.ClientInterfaces
@using Assignment1.DTOs
@inject IUserService UserService
@inject NavigationManager NavMgr
<div class="card">
    <h3>Create an Account</h3>
    <div class="field">
        <input placeholder="Username" type="text" @bind="_userName"/>
    </div>
    <div class="field">
        <input placeholder="Password" type="password" @bind="_password"/>
    </div> 
    <div class="field">
        <input placeholder="Repeat Password" type="password" @bind="_repeatPassword"/>
    </div>
    @if (!string.IsNullOrEmpty(_errorLabel))
    {
        <div class="field">
            <label style="color: red">
                @_errorLabel
            </label>
        </div>
    }
    <div class="field">
        <button class="loginbtn" @onclick="CreateAsync">Create an Account</button>
    </div>
</div>

<Modal ShowModal="_showModal">
    <p>You have successfully created an Account! You should log in now!</p>
    <button @onclick="@Proceed">Wonderful! Let's log in!</button>
</Modal>
@code {
    private string _userName = "";
    private string _password = "";
    private string _repeatPassword = "";
    private string _errorLabel = "";
    private bool _showModal;

    private async Task CreateAsync()
    {
        if (string.IsNullOrEmpty(_userName))
        {
            _errorLabel = "Username can not be empty!";
            return;
        }
        if (string.IsNullOrEmpty(_password))
        {
            _errorLabel = "Password cannot be empty!";
            return;
        }
        if (string.IsNullOrEmpty(_repeatPassword))
        {
            _errorLabel= "Repeat Password!";
            return;
        }
        if (!_password.Equals(_repeatPassword))
        {
            _errorLabel = "Repeated password is not the same as password!";
            return;
        }
        try
        {
            UserCreationDto dto = new(_userName, _password);
            await UserService.CreateAsync(dto);
            _showModal = true;

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _errorLabel = $"{e.Message}";
        }
        
    }
    private void Proceed()
    {
        _showModal = false;
        NavMgr.NavigateTo("/Login");
    }
}